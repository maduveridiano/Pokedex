{"version":3,"file":"static/js/305.b443df59.chunk.js","mappings":"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","sources":["app/reducers/addPokemonToList.ts","components/CompareContainer.tsx","pages/Compare.tsx","sections/Wrapper.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addDoc } from \"firebase/firestore\";\r\nimport { pokemonListRef } from \"../../utils/firebaseConfig\";\r\nimport { getUserPokemons } from \"./getUserPokemons\";\r\nimport { setToast } from \"../slices/AppSlice\";\r\nimport {\r\n  pokemonStatsType,\r\n  pokemonTypeInterface,\r\n  userPokemonsType,\r\n} from \"../../utils/types\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const addPokemonToList = createAsyncThunk(\r\n  \"pokemon/addPkemon\",\r\n  async (\r\n    pokemon: {\r\n      id: number;\r\n      name: string;\r\n      types: pokemonTypeInterface[] | string[];\r\n      stats?: pokemonStatsType[];\r\n    },\r\n    { getState, dispatch }\r\n  ) => {\r\n    try {\r\n      const {\r\n        app: { userInfo },\r\n        pokemon: { userPokemons },\r\n      } = getState() as RootState;\r\n      if (!userInfo?.email) {\r\n        return dispatch(\r\n          setToast(\"Please login in order to add pokemon to your collection.\")\r\n        );\r\n      }\r\n      const index = userPokemons.findIndex((userPokemon: userPokemonsType) => {\r\n        return userPokemon.name === pokemon.name;\r\n      });\r\n      if (index === -1) {\r\n        let types: string[] = [];\r\n        if (!pokemon.stats) {\r\n          pokemon.types.forEach((type: any) =>\r\n            types.push(Object.keys(type).toString())\r\n          );\r\n        } else {\r\n          types = pokemon.types as string[];\r\n        }\r\n        await addDoc(pokemonListRef, {\r\n          pokemon: { id: pokemon.id, name: pokemon.name, types },\r\n          email: userInfo.email,\r\n        });\r\n        await dispatch(getUserPokemons());\r\n        dispatch(setToast(`${pokemon.name} added to your collection.`));\r\n      } else {\r\n        dispatch(setToast(`${pokemon.name} already part of your collection.`));\r\n      }\r\n    } catch (err) {\r\n      console.log({ err });\r\n    }\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { removeFromCompare } from \"../app/slices/PokemonSlice\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\r\nimport { pokemonTypes } from \"../utils\";\r\nimport {\r\n  pokemonStatType,\r\n  pokemonTypeInterface,\r\n  userPokemonsType,\r\n} from \"../utils/types\";\r\nfunction CompareContainer({\r\n  pokemon = undefined,\r\n  isEmpty = false,\r\n}: {\r\n  pokemon?: userPokemonsType;\r\n  isEmpty?: boolean;\r\n}) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const createStatsArray = (\r\n    types: pokemonTypeInterface[],\r\n    statType: pokemonStatType\r\n  ) => {\r\n    const statsArray: { name: string; image: string }[] = [];\r\n    const statsSet = new Set<string>();\r\n    types.forEach((type: pokemonTypeInterface) => {\r\n      const key = Object.keys(type)[0];\r\n      type[key][statType].forEach((stat: string) => {\r\n        if (!statsSet.has(stat)) {\r\n          // @ts-ignore\r\n          statsArray.push({ name: stat, image: pokemonTypes[stat].image });\r\n          statsSet.add(stat);\r\n        }\r\n      });\r\n    });\r\n    return statsArray;\r\n  };\r\n  const getStats = () => {\r\n    return (\r\n      <>\r\n        <div className=\"pokemon-types\">\r\n          <h4 className=\"pokemon-type-title\">Strength</h4>\r\n          <div className=\"pokemon-type-icons\">\r\n            {createStatsArray(pokemon?.types!, \"strength\").map(\r\n              (stat: { image: string }) => (\r\n                <div className=\"pokemon-type\">\r\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"pokemon-types\">\r\n          <h4 className=\"pokemon-type-title\">Weakness</h4>\r\n          <div className=\"pokemon-type-icons\">\r\n            {createStatsArray(pokemon?.types!, \"weakness\").map(\r\n              (stat: { image: string }) => (\r\n                <div className=\"pokemon-type\">\r\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"pokemon-types\">\r\n          <h4 className=\"pokemon-type-title\">Resistance</h4>\r\n          <div className=\"pokemon-type-icons\">\r\n            {createStatsArray(pokemon?.types!, \"resistance\").map(\r\n              (stat: { image: string }) => (\r\n                <div className=\"pokemon-type\">\r\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"pokemon-types\">\r\n          <h4 className=\"pokemon-type-title\">Vulnerable</h4>\r\n          <div className=\"pokemon-type-icons\">\r\n            {createStatsArray(pokemon?.types!, \"vulnerable\").map(\r\n              (stat: { image: string }) => (\r\n                <div className=\"pokemon-type\">\r\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"compare-container\">\r\n      {isEmpty && (\r\n        <div className=\"empty\">\r\n          <button onClick={() => navigate(\"/search\")}>\r\n            <FaPlus />\r\n          </button>\r\n          <h3>Add Pokemon for Comparison</h3>\r\n        </div>\r\n      )}\r\n      {pokemon && (\r\n        <div className=\"compare-element\" key={pokemon?.id}>\r\n          <div className=\"compare-info\">\r\n            <div className=\"compare-details\">\r\n              <h3>{pokemon?.name}</h3>\r\n              <img\r\n                src={pokemon?.image}\r\n                alt=\"pokemon\"\r\n                className=\"compare-image\"\r\n              />\r\n            </div>\r\n            <div className=\"pokemon-types-container\">\r\n              <div className=\"pokemon-types\">\r\n                <h4 className=\"pokemon-type-title\">Type</h4>\r\n                <div className=\"pokemon-type-icons\">\r\n                  {pokemon?.types.map((type: pokemonTypeInterface) => {\r\n                    const keys = Object.keys(type);\r\n                    return (\r\n                      <div className=\"pokemon-type\">\r\n                        <img\r\n                          src={type[keys[0]].image}\r\n                          alt=\"pokemon type\"\r\n                          className=\"pokemon-type-image\"\r\n                          loading=\"lazy\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              {getStats()}\r\n            </div>\r\n          </div>\r\n          <div className=\"compare-action-buttons\">\r\n            <button\r\n              className=\"compare-btn\"\r\n              onClick={() => {\r\n                dispatch(addPokemonToList(pokemon));\r\n              }}\r\n            >\r\n              Add\r\n            </button>\r\n            <button\r\n              className=\"compare-btn\"\r\n              onClick={() => navigate(`/pokemon/${pokemon?.id}`)}\r\n            >\r\n              View\r\n            </button>\r\n            <button\r\n              className=\"compare-btn\"\r\n              onClick={() => dispatch(removeFromCompare({ id: pokemon?.id }))}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompareContainer;\r\n","import React from \"react\";\r\nimport Wrapper from \"../sections/Wrapper\";\r\nimport CompareContainer from \"../components/CompareContainer\";\r\nimport { useAppSelector } from \"../app/hooks\";\r\n\r\nfunction Compare() {\r\n  const { compareQueue } = useAppSelector(({ pokemon }) => pokemon);\r\n  return (\r\n    <div className=\"compare\">\r\n      <CompareContainer\r\n        pokemon={compareQueue[0]}\r\n        isEmpty={compareQueue.length < 1}\r\n      />\r\n      <CompareContainer\r\n        pokemon={compareQueue[1]}\r\n        isEmpty={compareQueue.length < 2}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper(Compare);\r\n","import React from \"react\";\r\n\r\nconst Wrapper = (Component: React.FC) => () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Component />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n"],"names":["addPokemonToList","createAsyncThunk","pokemon","getState","dispatch","userInfo","app","userPokemons","email","setToast","findIndex","userPokemon","name","types","stats","forEach","type","push","Object","keys","toString","addDoc","pokemonListRef","id","getUserPokemons","console","log","err","undefined","isEmpty","navigate","useNavigate","useAppDispatch","createStatsArray","statType","statsArray","statsSet","Set","stat","has","image","pokemonTypes","add","className","onClick","src","alt","map","loading","removeFromCompare","Wrapper","compareQueue","useAppSelector","length","Component"],"sourceRoot":""}